Instalaci�n para windows 10 32 o 64 bits.
Los programas instalados son de 32 bits por lo que funcionan tanto en 32 como en 64. 
Se usan programas de 32 bits ya que algunas de las librerias solo funcionan en sistemas de 32 bits.

Partimos de aqu�:
http://docs.opencv.org/3.2.0/d5/de5/tutorial_py_setup_in_windows.html
Desactualizado, pasos para instalarlo correctamente (python 2.7.5, opencv 3.3.0, numpy 1.13.1, matplotlib 1.3.0).

Instalar python 2.7.5 version 32 bits.
http://python.org/ftp/python/2.7.5/python-2.7.5.msi

Instalar pip para python.
Descargamos este archivo y lo ejecutamos.
https://bootstrap.pypa.io/get-pip.py

Descargamos numpy
https://pypi.python.org/packages/a9/d8/56777770f7d6c1fb028c38d4c6a9fe93f56e1b7b0d21ccdb5c0c27ecb329/numpy-1.13.1-cp27-none-win32.whl#md5=21c4dc286991347f506c0e27475f9058

Y instalamos numpy con pip:
pip install "numpy-1.13.1-cp27-none-win32.whl" 
Entre las comillas ponemos el nombre del archivo que descarguemos de numpy.
Para ejecutar este comando debemos estar en el directorio donde se encuentra este archivo.

Instalamos matplotlib:
https://downloads.sourceforge.net/project/matplotlib/matplotlib/matplotlib-1.3.0/matplotlib-1.3.0.win32-py2.7.exe
Instalamos con pip dos librerias necesarias para que funcione matplotlib.
pip install pyparsing
pip install python-dateutil

Por �ltimo descargamos opencv
https://sourceforge.net/projects/opencvlibrary/files/latest/download?source=files
Lo instalamos. (en realidad no es una instalac�n al uso, simplemente nos crear� una carpeta con las librerias para varios lenguajes de programaci�n)
Vamos donde nos ha instalado las librerias, accedemos a build/python/2.7/x86, copiamos el archivo cv2.py y lo copiamos en C:/Python27/lib/site-packages.
Descargaremos las librerias ffmpeg para poder abrir archivos de video http://ffmpeg.zeranoe.com/builds/ version static. Copiaremos la carpeta ffmpeg
en el directorio raiz del sistema. Añadiremos a la variable de entorno el directorio "C:\ffmpeg\bin" para comprobar el correcto funcionamiento,
ejecutamos en una ventana de comandos ffmpeg.
Por último moveremos la carpeta opencv al directorio raiz del disco. Añadiremos a la variable de entorno del sistema el directorio "C:\opencv\build\x64\vc14\bin" 
y copiaremos en la carpeta de python2.7 el archivo opencv_ffmpeg330.dll.

Tras esto probamos que todo esta instalado correctamente. Abrimos python IDLE desde el menu de inicio.
Realizamos los 3 import.
>>> import cv2
>>> import numpy
>>> import matplotlib
Ahora comprobaremos la version de cv2.
>>> print cv2.__version__
Nos deberia devolver 3.3.0
Si conseguimos realizar los import sin que salte ningun error, la instalaci�n es correcta.

El IDE que vamos a usar es Visual Studio Code, por su integraci�n con git y las extensiones para python.
https://code.visualstudio.com/

Para poder usar git lo descargamos e instalamos: https://git-scm.com/download/win
Una vez creado el repositorio en github, simplemente copiamos la url de este y desde un terminal ejecutamos:
git clone urldelrepositorio.

Abrimos esta carpeta desde visual studio code. Nos detectar� la carpeta como clon de un repositorio, 
todos los cambios que hagamos sobre la carpeta/archivos de esta, aparecer�n reflejados en el icono de control de versiones.

Por �ltimo podemos configurar Visual Studio Code para ayudarnos a programar y debuggear nuestros c�digos python.
Instalamos la extension de python(La primera que nos aparece).
Instalamos pylint(nos lo propone el programa directamente) para obtener warnings y errores directamente sobre el c�digo.
Podemos configurar las advertencias, warnings y errores de pylint mediante la creacci�n de un archivo .pylintrc .
